<!-- Use ivy later for jsch dependency -->
<project name="Build_PhoneGap_SDK" default="" basedir=".">

        <!-- Running fabric tasks -->

        <!--Users-->
        <property name="user.testAdmin" value="root" />
        <property name="user.testAdmin.password" value="7layer" />


        <!--Servers-->
        <property name="servers.testAdmin" value="${Host_TestAdmin}" />
        <property name="servers.testAdmin.port" value="${Host_TestAdminPort}" />

        <!-- Path -->
        <property name="path.dest" value="./dist/Fitnesse" />
        <property name="path.svnRoot" value="svn+ssh://sarek/home/svnuser" />
        <property name="path.automation" value="${Host_TestAdminFitnessePath}" />

        <!-- Folder should be mapped to repository -->
        <property name="path.readyForQAPath" value="${Path_Repository}" />

    <!-- Build properties -->
        <property name="host.build" value="${HOST}" />
        <property name="host.buildUserName" value="${USERNAME}" />
        <property name="host.buildUserPassword" value="${PASSWORD}" />
        <property name="path.checkout" value="${BUILD_PATH}"/>
        <property name="url.checkout" value="${SVN_URL}" />
        <property name="path.destPath" value="${DEST_PATH}"/>
        <property name="path.repoPath" value="${REPO_PATH}" />
        <property name="buildMode" value="${BUILD_MODE}" />
        <property name="buildVersion" value="${BUILD_VERSION}" />
        
        <!-- Folder should be mapped to repository -->
        <property name="parameters.ssgRepoPath" value="${SSG_Path_Repository}" />
        <property name="parameters.Tags" value="${TEST_TAGS}" />

        <!-- ======================================= build SDK ======================================= -->
        <target name="buildSDK">
                <echo>Removing old checkout ... </echo>
            <sshexec trust="true" command="rm -rf ${path.checkout}" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <sshexec trust="true" command="mkdir ${path.checkout}" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <echo>Start SDK branch checkout ...</echo>
                <sshexec trust="true" command="cd ${path.checkout}; svn checkout ${url.checkout} . --username tinder --password 7layer" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" />
                <echo>Removing old SDK build ... </echo>
            <sshexec trust="true" command="rm -rf ${path.destPath}/*" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <echo>Run SDK build ...</echo>
                <sshexec trust="true" command="security unlock-keychain -p ${host.buildUserPassword} /Users/admin/Library/Keychains/CodeSigning.keychain" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <sshexec trust="true" command="cd ${path.checkout}/build; export BUILD_MODE=${buildMode}; export BUILD_VERSION=${buildVersion}; ./build.sh" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" />
                <echo>Deploying SDK build ...</echo>
                <sshexec trust="true" command="cp -rf  ${path.destPath}/* ${path.repoPath}" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
        </target>
        
        <!-- ======================================= DEV build SDK ======================================= -->
        <target name="DEVbuildSDK">
                <echo>Removing old checkout ... </echo>
            <sshexec trust="true" command="rm -rf ${path.checkout}" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <sshexec trust="true" command="mkdir ${path.checkout}" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <echo>Start SDK branch checkout ...</echo>
                <sshexec trust="true" command="cd ${path.checkout}; svn checkout ${url.checkout} . --username tinder --password 7layer" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" />
                <echo>Removing old SDK build ... </echo>
            <sshexec trust="true" command="rm -rf ${path.destPath}/*" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <echo>Run SDK build ...</echo>
                <sshexec trust="true" command="security unlock-keychain -p ${host.buildUserPassword} /Users/admin/Library/Keychains/CodeSigning.keychain" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" failonerror="false" />
                <sshexec trust="true" command="cd ${path.checkout}/build; export BUILD_MODE=${buildMode}; export BUILD_VERSION=${buildVersion}; ./build.sh" host="${host.build}" password="${host.buildUserPassword}" username="${host.buildUserName}" />
        </target>
</project>